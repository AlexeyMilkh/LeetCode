from typing import List

"""Дан массив целых чисел nums и целочисленное значение target. Верните индексы 2х чисел так, чтобы в сумме они 
составляли целочисленное значение target. Вы можете предположить, что каждый ввод будет иметь ровно одно решение, 
и вы не можете использовать один и тот же элемент дважды. Вы можете вернуть ответ в любом порядке."""


data = [2, 7, 11, 15]
point = 9


def twoSum(nums: List[int], target: int) -> List[int]:
    hashmap = {}  # Создаем пустой словарь - индекс элемента: числовое значение
    for i in range(len(nums)):  # Запускаем цикл в диапазоне длины списка
        complement = target - nums[i]  # Задаем переменную "разница" между целевым значением и элементов списка
        if complement in hashmap:  # Если значение разницы есть в словаре
            return [i, hashmap[complement]]  # Вернуть список [элемент, элемент(разница]
        hashmap[nums[i]] = i  # Добавляем в словарь элемент, если в словаре не найдена "разница"


print(twoSum(data, point))
