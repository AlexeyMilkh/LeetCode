"""Имея две двоичные строки a и b, верните их сумму в виде двоичной строки.

Примечание: Функция ord() для символа x вернет число из таблицы символов Unicode, представляющее его позицию.
Например, ord('a') возвращает целое число 97 и ord('€') вернет 8364. Функция ord() обратная chr() . Для символа
строки 8-бит возвращает значение байта."""


def addBinary(a: str, b: str) -> str:
    result = ""  # Инициализируем переменную Результат пустой строкой
    carry = 0  # Инициализация двигающейся в конец строки переменной

    a, b = a[::-1], b[::-1]  # Инвертируем данные строк

    for i in range(max(len(a), len(b))):  # Цикл в диапазоне длины максимальной строки
        digitA = ord(a[i]) - ord("0") if i < len(a) else 0  # Вычисляем значение элемента в строке A
        digitB = ord(b[i]) - ord("0") if i < len(b) else 0  # Вычисляем значение элемента в строке B

        total = digitA + digitB + carry  # Вычисляем значение суммы элементов
        char = str(total % 2)  # Вычисляем остаток от деления, который пойдет в Результат
        result = char + result  # Кладем остаток от деления в Результат
        carry = total // 2  # Вычисляем значение плавающей переменной

    if carry:
        result = "1" + result

    return result


a1 = "11"
b1 = "1"
print(addBinary(a1, b1))
a2 = "1010"
b2 = "1011"
print(addBinary(a2, b2))
